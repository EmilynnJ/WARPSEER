services:
  # Backend API Service
  - type: web
    name: soulseer-backend
    env: python
    rootDir: apps/backend
    buildCommand: "pip install -r requirements.txt"
    startCommand: "uvicorn src.soulseer.main:app --host 0.0.0.0 --port $PORT"
    envVars:
      - key: DATABASE_URL
        fromDatabase:
          name: soulseer-db
          property: connectionString
      - key: REDIS_URL
        fromService:
          type: redis
          name: soulseer-redis
          property: connectionString
      - key: STRIPE_SECRET_KEY
        sync: false
      - key: STRIPE_WEBHOOK_SIGNING_SECRET
        sync: false
      - key: CLERK_SECRET_KEY
        sync: false
      - key: ADMIN_EMAIL
        value: admin@soulseer.com
      - key: ONESIGNAL_APP_ID
        sync: false
      - key: ONESIGNAL_API_KEY
        sync: false

  # Frontend Service
  - type: web
    name: soulseer-frontend
    env: node
    rootDir: apps/frontend
    buildCommand: "npm install && npm run build"
    startCommand: "npm run preview"
    envVars:
      - key: PUBLIC_BACKEND_URL
        fromService:
          type: web
          name: soulseer-backend
          property: hostUrl
      - key: PUBLIC_STRIPE_KEY
        value: pk_live_51JY2J5KBeGJ0fV26C6zN0crXCLmqQ7oagXck1LnozE94NAIjk7HWugb5Eb9eUpXfqawyRDD3WlPAcWT6f6Wt9uv5009H97Xbax
      - key: NODE_VERSION
        value: 20

  # Background Worker (Celery)
  - type: worker
    name: soulseer-worker
    env: python
    rootDir: apps/backend
    buildCommand: "pip install -r requirements.txt"
    startCommand: "celery -A src.soulseer.celery_app worker --loglevel=info"
    envVars:
      - fromGroup: soulseer-backend

  # Redis Service
  - type: redis
    name: soulseer-redis
    plan: starter
    ipAllowList: []

# Databases
databases:
  - name: soulseer-db
    databaseName: soulseer
    plan: starter
    ipAllowList: []

