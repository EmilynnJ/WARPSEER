# Multi-service Dockerfile for Fly.io monorepo deployment
# Runs both FastAPI backend and SvelteKit frontend behind Caddy

# ---------- FRONTEND BUILD ----------
FROM node:20-alpine AS frontend-build
WORKDIR /app/frontend

# Copy package files
COPY apps/frontend/package*.json ./
COPY apps/frontend/pnpm-lock.yaml* ./

# Install dependencies
RUN npm ci || npm install

# Copy frontend source
COPY apps/frontend ./

# Build SvelteKit with Node adapter
RUN npm run build

# ---------- BACKEND DEPENDENCIES ----------
FROM python:3.11-slim AS backend-deps
WORKDIR /app

# Install Python dependencies
COPY apps/backend/requirements.txt ./
RUN pip install --no-cache-dir -r requirements.txt

# ---------- FINAL RUNTIME IMAGE ----------
FROM python:3.11-slim
WORKDIR /app

# Install Node.js 20, Caddy and supervisord
RUN apt-get update && apt-get install -y \
    curl \
    supervisor \
    ca-certificates \
    gnupg \
    && mkdir -p /etc/apt/keyrings \
    && curl -fsSL https://deb.nodesource.com/gpgkey/nodesource-repo.gpg.key | gpg --dearmor -o /etc/apt/keyrings/nodesource.gpg \
    && echo "deb [signed-by=/etc/apt/keyrings/nodesource.gpg] https://deb.nodesource.com/node_20.x nodistro main" | tee /etc/apt/sources.list.d/nodesource.list \
    && apt-get update \
    && apt-get install -y nodejs \
    && npm install -g npm@latest \
    && curl -L https://github.com/caddyserver/caddy/releases/download/v2.7.6/caddy_2.7.6_linux_amd64.deb -o caddy.deb \
    && dpkg -i caddy.deb \
    && rm caddy.deb \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Copy Python dependencies from deps stage
COPY --from=backend-deps /usr/local/lib/python3.11/site-packages /usr/local/lib/python3.11/site-packages
COPY --from=backend-deps /usr/local/bin /usr/local/bin

# Copy backend code
COPY apps/backend ./apps/backend

# Copy built frontend from build stage
COPY --from=frontend-build /app/frontend/build ./apps/frontend/build
COPY --from=frontend-build /app/frontend/package.json ./apps/frontend/

# Copy Caddy config
COPY Caddyfile /etc/caddy/Caddyfile

# Copy supervisor config
COPY supervisord.conf /etc/supervisor/conf.d/supervisord.conf

# Environment variables
ENV NODE_ENV=production
ENV PORT=8080
ENV PYTHONUNBUFFERED=1
ENV PUBLIC_BACKEND_URL=http://localhost:8080

# Create necessary directories
RUN mkdir -p /var/log/supervisor

# Expose the single port
EXPOSE 8080

# Use supervisord to manage multiple processes
CMD ["/usr/bin/supervisord", "-c", "/etc/supervisor/conf.d/supervisord.conf"]
